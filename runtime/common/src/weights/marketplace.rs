// This file is part of Basilisk.

// Copyright (C) 2020-2023  Intergalactic, Limited (GIB).
// SPDX-License-Identifier: Apache-2.0

// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

//! Autogenerated weights for pallet_marketplace
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2023-05-30, STEPS: 5, REPEAT: 20, LOW RANGE: [], HIGH RANGE: []
//! EXECUTION: None, WASM-EXECUTION: Compiled, CHAIN: Some("dev"), DB CACHE: 1024

// Executed Command:
// target/release/basilisk
// benchmark
// pallet
// --pallet=pallet-marketplace
// --chain=dev
// --extrinsic=*
// --steps=5
// --repeat=20
// --output
// marketplace.rs
// --template
// .maintain/pallet-weight-template.hbs

#![allow(unused_parens)]
#![allow(unused_imports)]
#![allow(clippy::unnecessary_cast)]

use frame_support::{
	traits::Get,
	weights::{constants::RocksDbWeight, Weight},
};
use sp_std::marker::PhantomData;

/// Weight functions needed for pallet_marketplace.
pub trait WeightInfo {
	fn buy() -> Weight;
	fn set_price() -> Weight;
	fn make_offer() -> Weight;
	fn withdraw_offer() -> Weight;
	fn accept_offer() -> Weight;
	fn add_royalty() -> Weight;
}

/// Weights for pallet_marketplace using the hydraDX node and recommended hardware.
pub struct BasiliskWeight<T>(PhantomData<T>);

impl<T: frame_system::Config> WeightInfo for BasiliskWeight<T> {
	// Storage: Uniques Asset (r:1 w:1)
	// Proof: Uniques Asset (max_values: None, max_size: Some(146), added: 2621, mode: MaxEncodedLen)
	// Storage: Marketplace Prices (r:1 w:1)
	// Proof Skipped: Marketplace Prices (max_values: None, max_size: None, mode: Measured)
	// Storage: Marketplace MarketplaceItems (r:1 w:0)
	// Proof Skipped: Marketplace MarketplaceItems (max_values: None, max_size: None, mode: Measured)
	// Storage: AssetRegistry NextAssetId (r:1 w:0)
	// Proof Skipped: AssetRegistry NextAssetId (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: AssetRegistry LocationAssets (r:1 w:0)
	// Proof Skipped: AssetRegistry LocationAssets (max_values: None, max_size: None, mode: Measured)
	// Storage: Tokens Accounts (r:2 w:2)
	// Proof: Tokens Accounts (max_values: None, max_size: Some(108), added: 2583, mode: MaxEncodedLen)
	// Storage: AssetRegistry Assets (r:1 w:0)
	// Proof Skipped: AssetRegistry Assets (max_values: None, max_size: None, mode: Measured)
	// Storage: NFT Collections (r:1 w:0)
	// Proof: NFT Collections (max_values: None, max_size: Some(99), added: 2574, mode: MaxEncodedLen)
	// Storage: Uniques Class (r:1 w:0)
	// Proof: Uniques Class (max_values: None, max_size: Some(190), added: 2665, mode: MaxEncodedLen)
	// Storage: Uniques Account (r:0 w:2)
	// Proof: Uniques Account (max_values: None, max_size: Some(112), added: 2587, mode: MaxEncodedLen)
	// Storage: Uniques ItemPriceOf (r:0 w:1)
	// Proof: Uniques ItemPriceOf (max_values: None, max_size: Some(113), added: 2588, mode: MaxEncodedLen)
	fn buy() -> Weight {
		// Minimum execution time: 77_188 nanoseconds.
		Weight::from_ref_time(78_298_000 as u64)
			.saturating_add(T::DbWeight::get().reads(10 as u64))
			.saturating_add(T::DbWeight::get().writes(7 as u64))
	}
	// Storage: Uniques Asset (r:1 w:0)
	// Proof: Uniques Asset (max_values: None, max_size: Some(146), added: 2621, mode: MaxEncodedLen)
	// Storage: Marketplace Prices (r:1 w:1)
	// Proof Skipped: Marketplace Prices (max_values: None, max_size: None, mode: Measured)
	fn set_price() -> Weight {
		// Minimum execution time: 25_494 nanoseconds.
		Weight::from_ref_time(25_929_000 as u64)
			.saturating_add(T::DbWeight::get().reads(2 as u64))
			.saturating_add(T::DbWeight::get().writes(1 as u64))
	}
	// Storage: Marketplace Offers (r:1 w:1)
	// Proof Skipped: Marketplace Offers (max_values: None, max_size: None, mode: Measured)
	// Storage: AssetRegistry NextAssetId (r:1 w:0)
	// Proof Skipped: AssetRegistry NextAssetId (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: AssetRegistry LocationAssets (r:1 w:0)
	// Proof Skipped: AssetRegistry LocationAssets (max_values: None, max_size: None, mode: Measured)
	// Storage: Tokens Accounts (r:1 w:1)
	// Proof: Tokens Accounts (max_values: None, max_size: Some(108), added: 2583, mode: MaxEncodedLen)
	// Storage: AssetRegistry Assets (r:1 w:0)
	// Proof Skipped: AssetRegistry Assets (max_values: None, max_size: None, mode: Measured)
	fn make_offer() -> Weight {
		// Minimum execution time: 41_867 nanoseconds.
		Weight::from_ref_time(42_432_000 as u64)
			.saturating_add(T::DbWeight::get().reads(5 as u64))
			.saturating_add(T::DbWeight::get().writes(2 as u64))
	}
	// Storage: Marketplace Offers (r:1 w:1)
	// Proof Skipped: Marketplace Offers (max_values: None, max_size: None, mode: Measured)
	// Storage: Uniques Asset (r:1 w:0)
	// Proof: Uniques Asset (max_values: None, max_size: Some(146), added: 2621, mode: MaxEncodedLen)
	// Storage: AssetRegistry NextAssetId (r:1 w:0)
	// Proof Skipped: AssetRegistry NextAssetId (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: AssetRegistry LocationAssets (r:1 w:0)
	// Proof Skipped: AssetRegistry LocationAssets (max_values: None, max_size: None, mode: Measured)
	// Storage: Tokens Accounts (r:1 w:1)
	// Proof: Tokens Accounts (max_values: None, max_size: Some(108), added: 2583, mode: MaxEncodedLen)
	// Storage: AssetRegistry Assets (r:1 w:0)
	// Proof Skipped: AssetRegistry Assets (max_values: None, max_size: None, mode: Measured)
	fn withdraw_offer() -> Weight {
		// Minimum execution time: 46_145 nanoseconds.
		Weight::from_ref_time(46_641_000 as u64)
			.saturating_add(T::DbWeight::get().reads(6 as u64))
			.saturating_add(T::DbWeight::get().writes(2 as u64))
	}
	// Storage: Uniques Asset (r:1 w:1)
	// Proof: Uniques Asset (max_values: None, max_size: Some(146), added: 2621, mode: MaxEncodedLen)
	// Storage: Marketplace Offers (r:1 w:1)
	// Proof Skipped: Marketplace Offers (max_values: None, max_size: None, mode: Measured)
	// Storage: AssetRegistry NextAssetId (r:1 w:0)
	// Proof Skipped: AssetRegistry NextAssetId (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: AssetRegistry LocationAssets (r:1 w:0)
	// Proof Skipped: AssetRegistry LocationAssets (max_values: None, max_size: None, mode: Measured)
	// Storage: Tokens Accounts (r:2 w:2)
	// Proof: Tokens Accounts (max_values: None, max_size: Some(108), added: 2583, mode: MaxEncodedLen)
	// Storage: AssetRegistry Assets (r:1 w:0)
	// Proof Skipped: AssetRegistry Assets (max_values: None, max_size: None, mode: Measured)
	// Storage: Marketplace Prices (r:1 w:1)
	// Proof Skipped: Marketplace Prices (max_values: None, max_size: None, mode: Measured)
	// Storage: Marketplace MarketplaceItems (r:1 w:0)
	// Proof Skipped: Marketplace MarketplaceItems (max_values: None, max_size: None, mode: Measured)
	// Storage: NFT Collections (r:1 w:0)
	// Proof: NFT Collections (max_values: None, max_size: Some(99), added: 2574, mode: MaxEncodedLen)
	// Storage: Uniques Class (r:1 w:0)
	// Proof: Uniques Class (max_values: None, max_size: Some(190), added: 2665, mode: MaxEncodedLen)
	// Storage: Uniques Account (r:0 w:2)
	// Proof: Uniques Account (max_values: None, max_size: Some(112), added: 2587, mode: MaxEncodedLen)
	// Storage: Uniques ItemPriceOf (r:0 w:1)
	// Proof: Uniques ItemPriceOf (max_values: None, max_size: Some(113), added: 2588, mode: MaxEncodedLen)
	fn accept_offer() -> Weight {
		// Minimum execution time: 87_580 nanoseconds.
		Weight::from_ref_time(89_455_000 as u64)
			.saturating_add(T::DbWeight::get().reads(11 as u64))
			.saturating_add(T::DbWeight::get().writes(8 as u64))
	}
	// Storage: Marketplace MarketplaceItems (r:1 w:1)
	// Proof Skipped: Marketplace MarketplaceItems (max_values: None, max_size: None, mode: Measured)
	// Storage: Uniques Asset (r:1 w:0)
	// Proof: Uniques Asset (max_values: None, max_size: Some(146), added: 2621, mode: MaxEncodedLen)
	// Storage: AssetRegistry NextAssetId (r:1 w:0)
	// Proof Skipped: AssetRegistry NextAssetId (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: AssetRegistry LocationAssets (r:1 w:0)
	// Proof Skipped: AssetRegistry LocationAssets (max_values: None, max_size: None, mode: Measured)
	fn add_royalty() -> Weight {
		// Minimum execution time: 33_480 nanoseconds.
		Weight::from_ref_time(33_948_000 as u64)
			.saturating_add(T::DbWeight::get().reads(4 as u64))
			.saturating_add(T::DbWeight::get().writes(1 as u64))
	}
}

// For backwards compatibility and tests
impl WeightInfo for () {
	// Storage: Uniques Asset (r:1 w:1)
	// Proof: Uniques Asset (max_values: None, max_size: Some(146), added: 2621, mode: MaxEncodedLen)
	// Storage: Marketplace Prices (r:1 w:1)
	// Proof Skipped: Marketplace Prices (max_values: None, max_size: None, mode: Measured)
	// Storage: Marketplace MarketplaceItems (r:1 w:0)
	// Proof Skipped: Marketplace MarketplaceItems (max_values: None, max_size: None, mode: Measured)
	// Storage: AssetRegistry NextAssetId (r:1 w:0)
	// Proof Skipped: AssetRegistry NextAssetId (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: AssetRegistry LocationAssets (r:1 w:0)
	// Proof Skipped: AssetRegistry LocationAssets (max_values: None, max_size: None, mode: Measured)
	// Storage: Tokens Accounts (r:2 w:2)
	// Proof: Tokens Accounts (max_values: None, max_size: Some(108), added: 2583, mode: MaxEncodedLen)
	// Storage: AssetRegistry Assets (r:1 w:0)
	// Proof Skipped: AssetRegistry Assets (max_values: None, max_size: None, mode: Measured)
	// Storage: NFT Collections (r:1 w:0)
	// Proof: NFT Collections (max_values: None, max_size: Some(99), added: 2574, mode: MaxEncodedLen)
	// Storage: Uniques Class (r:1 w:0)
	// Proof: Uniques Class (max_values: None, max_size: Some(190), added: 2665, mode: MaxEncodedLen)
	// Storage: Uniques Account (r:0 w:2)
	// Proof: Uniques Account (max_values: None, max_size: Some(112), added: 2587, mode: MaxEncodedLen)
	// Storage: Uniques ItemPriceOf (r:0 w:1)
	// Proof: Uniques ItemPriceOf (max_values: None, max_size: Some(113), added: 2588, mode: MaxEncodedLen)
	fn buy() -> Weight {
		// Minimum execution time: 77_188 nanoseconds.
		Weight::from_ref_time(78_298_000 as u64)
			.saturating_add(RocksDbWeight::get().reads(10 as u64))
			.saturating_add(RocksDbWeight::get().writes(7 as u64))
	}
	// Storage: Uniques Asset (r:1 w:0)
	// Proof: Uniques Asset (max_values: None, max_size: Some(146), added: 2621, mode: MaxEncodedLen)
	// Storage: Marketplace Prices (r:1 w:1)
	// Proof Skipped: Marketplace Prices (max_values: None, max_size: None, mode: Measured)
	fn set_price() -> Weight {
		// Minimum execution time: 25_494 nanoseconds.
		Weight::from_ref_time(25_929_000 as u64)
			.saturating_add(RocksDbWeight::get().reads(2 as u64))
			.saturating_add(RocksDbWeight::get().writes(1 as u64))
	}
	// Storage: Marketplace Offers (r:1 w:1)
	// Proof Skipped: Marketplace Offers (max_values: None, max_size: None, mode: Measured)
	// Storage: AssetRegistry NextAssetId (r:1 w:0)
	// Proof Skipped: AssetRegistry NextAssetId (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: AssetRegistry LocationAssets (r:1 w:0)
	// Proof Skipped: AssetRegistry LocationAssets (max_values: None, max_size: None, mode: Measured)
	// Storage: Tokens Accounts (r:1 w:1)
	// Proof: Tokens Accounts (max_values: None, max_size: Some(108), added: 2583, mode: MaxEncodedLen)
	// Storage: AssetRegistry Assets (r:1 w:0)
	// Proof Skipped: AssetRegistry Assets (max_values: None, max_size: None, mode: Measured)
	fn make_offer() -> Weight {
		// Minimum execution time: 41_867 nanoseconds.
		Weight::from_ref_time(42_432_000 as u64)
			.saturating_add(RocksDbWeight::get().reads(5 as u64))
			.saturating_add(RocksDbWeight::get().writes(2 as u64))
	}
	// Storage: Marketplace Offers (r:1 w:1)
	// Proof Skipped: Marketplace Offers (max_values: None, max_size: None, mode: Measured)
	// Storage: Uniques Asset (r:1 w:0)
	// Proof: Uniques Asset (max_values: None, max_size: Some(146), added: 2621, mode: MaxEncodedLen)
	// Storage: AssetRegistry NextAssetId (r:1 w:0)
	// Proof Skipped: AssetRegistry NextAssetId (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: AssetRegistry LocationAssets (r:1 w:0)
	// Proof Skipped: AssetRegistry LocationAssets (max_values: None, max_size: None, mode: Measured)
	// Storage: Tokens Accounts (r:1 w:1)
	// Proof: Tokens Accounts (max_values: None, max_size: Some(108), added: 2583, mode: MaxEncodedLen)
	// Storage: AssetRegistry Assets (r:1 w:0)
	// Proof Skipped: AssetRegistry Assets (max_values: None, max_size: None, mode: Measured)
	fn withdraw_offer() -> Weight {
		// Minimum execution time: 46_145 nanoseconds.
		Weight::from_ref_time(46_641_000 as u64)
			.saturating_add(RocksDbWeight::get().reads(6 as u64))
			.saturating_add(RocksDbWeight::get().writes(2 as u64))
	}
	// Storage: Uniques Asset (r:1 w:1)
	// Proof: Uniques Asset (max_values: None, max_size: Some(146), added: 2621, mode: MaxEncodedLen)
	// Storage: Marketplace Offers (r:1 w:1)
	// Proof Skipped: Marketplace Offers (max_values: None, max_size: None, mode: Measured)
	// Storage: AssetRegistry NextAssetId (r:1 w:0)
	// Proof Skipped: AssetRegistry NextAssetId (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: AssetRegistry LocationAssets (r:1 w:0)
	// Proof Skipped: AssetRegistry LocationAssets (max_values: None, max_size: None, mode: Measured)
	// Storage: Tokens Accounts (r:2 w:2)
	// Proof: Tokens Accounts (max_values: None, max_size: Some(108), added: 2583, mode: MaxEncodedLen)
	// Storage: AssetRegistry Assets (r:1 w:0)
	// Proof Skipped: AssetRegistry Assets (max_values: None, max_size: None, mode: Measured)
	// Storage: Marketplace Prices (r:1 w:1)
	// Proof Skipped: Marketplace Prices (max_values: None, max_size: None, mode: Measured)
	// Storage: Marketplace MarketplaceItems (r:1 w:0)
	// Proof Skipped: Marketplace MarketplaceItems (max_values: None, max_size: None, mode: Measured)
	// Storage: NFT Collections (r:1 w:0)
	// Proof: NFT Collections (max_values: None, max_size: Some(99), added: 2574, mode: MaxEncodedLen)
	// Storage: Uniques Class (r:1 w:0)
	// Proof: Uniques Class (max_values: None, max_size: Some(190), added: 2665, mode: MaxEncodedLen)
	// Storage: Uniques Account (r:0 w:2)
	// Proof: Uniques Account (max_values: None, max_size: Some(112), added: 2587, mode: MaxEncodedLen)
	// Storage: Uniques ItemPriceOf (r:0 w:1)
	// Proof: Uniques ItemPriceOf (max_values: None, max_size: Some(113), added: 2588, mode: MaxEncodedLen)
	fn accept_offer() -> Weight {
		// Minimum execution time: 87_580 nanoseconds.
		Weight::from_ref_time(89_455_000 as u64)
			.saturating_add(RocksDbWeight::get().reads(11 as u64))
			.saturating_add(RocksDbWeight::get().writes(8 as u64))
	}
	// Storage: Marketplace MarketplaceItems (r:1 w:1)
	// Proof Skipped: Marketplace MarketplaceItems (max_values: None, max_size: None, mode: Measured)
	// Storage: Uniques Asset (r:1 w:0)
	// Proof: Uniques Asset (max_values: None, max_size: Some(146), added: 2621, mode: MaxEncodedLen)
	// Storage: AssetRegistry NextAssetId (r:1 w:0)
	// Proof Skipped: AssetRegistry NextAssetId (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: AssetRegistry LocationAssets (r:1 w:0)
	// Proof Skipped: AssetRegistry LocationAssets (max_values: None, max_size: None, mode: Measured)
	fn add_royalty() -> Weight {
		// Minimum execution time: 33_480 nanoseconds.
		Weight::from_ref_time(33_948_000 as u64)
			.saturating_add(RocksDbWeight::get().reads(4 as u64))
			.saturating_add(RocksDbWeight::get().writes(1 as u64))
	}
}
