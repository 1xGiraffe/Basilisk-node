// This file is part of Basilisk.

// Copyright (C) 2020-2023  Intergalactic, Limited (GIB).
// SPDX-License-Identifier: Apache-2.0

// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

//! Autogenerated weights for pallet_xcm
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2023-06-01, STEPS: 5, REPEAT: 20, LOW RANGE: [], HIGH RANGE: []
//! EXECUTION: None, WASM-EXECUTION: Compiled, CHAIN: Some("dev"), DB CACHE: 1024

// Executed Command:
// target/release/basilisk
// benchmark
// pallet
// --pallet=pallet-xcm
// --chain=dev
// --extrinsic=*
// --steps=5
// --repeat=20
// --output
// xcm.rs
// --template
// .maintain/pallet-weight-template-no-back.hbs

#![allow(unused_parens)]
#![allow(unused_imports)]
#![allow(clippy::unnecessary_cast)]

use frame_support::{
    traits::Get,
    weights::{constants::RocksDbWeight, Weight},
};
use sp_std::marker::PhantomData;

use pallet_xcm::weights::WeightInfo;

pub struct BasiliskWeight<T>(PhantomData<T>);

impl<T: frame_system::Config> WeightInfo for BasiliskWeight<T> {
	// Storage: PolkadotXcm SupportedVersion (r:1 w:0)
	// Proof Skipped: PolkadotXcm SupportedVersion (max_values: None, max_size: None, mode: Measured)
	// Storage: PolkadotXcm VersionDiscoveryQueue (r:1 w:1)
	// Proof Skipped: PolkadotXcm VersionDiscoveryQueue (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: PolkadotXcm SafeXcmVersion (r:1 w:0)
	// Proof Skipped: PolkadotXcm SafeXcmVersion (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: ParachainSystem HostConfiguration (r:1 w:0)
	// Proof Skipped: ParachainSystem HostConfiguration (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: ParachainSystem PendingUpwardMessages (r:1 w:1)
	// Proof Skipped: ParachainSystem PendingUpwardMessages (max_values: Some(1), max_size: None, mode: Measured)
    fn send() -> Weight {
        // Minimum execution time: 17_707 nanoseconds.
        Weight::from_ref_time(18_429_000 as u64)            .saturating_add(T::DbWeight::get().reads(5 as u64))
            .saturating_add(T::DbWeight::get().writes(2 as u64))
    }
	// Storage: Benchmark Override (r:0 w:0)
	// Proof Skipped: Benchmark Override (max_values: None, max_size: None, mode: Measured)
    fn teleport_assets() -> Weight {
        // Minimum execution time: 18_446_744_073_709_551 nanoseconds.
        Weight::from_ref_time(18_446_744_073_709_551_000 as u64)    }
	// Storage: ParachainInfo ParachainId (r:1 w:0)
	// Proof: ParachainInfo ParachainId (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
    fn reserve_transfer_assets() -> Weight {
        // Minimum execution time: 12_747 nanoseconds.
        Weight::from_ref_time(13_188_000 as u64)            .saturating_add(T::DbWeight::get().reads(1 as u64))
    }
    fn execute() -> Weight {
        // Minimum execution time: 5_205 nanoseconds.
        Weight::from_ref_time(5_338_000 as u64)    }
	// Storage: PolkadotXcm SupportedVersion (r:0 w:1)
	// Proof Skipped: PolkadotXcm SupportedVersion (max_values: None, max_size: None, mode: Measured)
    fn force_xcm_version() -> Weight {
        // Minimum execution time: 5_677 nanoseconds.
        Weight::from_ref_time(5_857_000 as u64)            .saturating_add(T::DbWeight::get().writes(1 as u64))
    }
	// Storage: PolkadotXcm SafeXcmVersion (r:0 w:1)
	// Proof Skipped: PolkadotXcm SafeXcmVersion (max_values: Some(1), max_size: None, mode: Measured)
    fn force_default_xcm_version() -> Weight {
        // Minimum execution time: 1_786 nanoseconds.
        Weight::from_ref_time(1_915_000 as u64)            .saturating_add(T::DbWeight::get().writes(1 as u64))
    }
	// Storage: PolkadotXcm VersionNotifiers (r:1 w:1)
	// Proof Skipped: PolkadotXcm VersionNotifiers (max_values: None, max_size: None, mode: Measured)
	// Storage: PolkadotXcm QueryCounter (r:1 w:1)
	// Proof Skipped: PolkadotXcm QueryCounter (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: PolkadotXcm SupportedVersion (r:1 w:0)
	// Proof Skipped: PolkadotXcm SupportedVersion (max_values: None, max_size: None, mode: Measured)
	// Storage: PolkadotXcm VersionDiscoveryQueue (r:1 w:1)
	// Proof Skipped: PolkadotXcm VersionDiscoveryQueue (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: PolkadotXcm SafeXcmVersion (r:1 w:0)
	// Proof Skipped: PolkadotXcm SafeXcmVersion (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: ParachainSystem HostConfiguration (r:1 w:0)
	// Proof Skipped: ParachainSystem HostConfiguration (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: ParachainSystem PendingUpwardMessages (r:1 w:1)
	// Proof Skipped: ParachainSystem PendingUpwardMessages (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: PolkadotXcm Queries (r:0 w:1)
	// Proof Skipped: PolkadotXcm Queries (max_values: None, max_size: None, mode: Measured)
    fn force_subscribe_version_notify() -> Weight {
        // Minimum execution time: 22_986 nanoseconds.
        Weight::from_ref_time(23_583_000 as u64)            .saturating_add(T::DbWeight::get().reads(7 as u64))
            .saturating_add(T::DbWeight::get().writes(5 as u64))
    }
	// Storage: PolkadotXcm VersionNotifiers (r:1 w:1)
	// Proof Skipped: PolkadotXcm VersionNotifiers (max_values: None, max_size: None, mode: Measured)
	// Storage: PolkadotXcm SupportedVersion (r:1 w:0)
	// Proof Skipped: PolkadotXcm SupportedVersion (max_values: None, max_size: None, mode: Measured)
	// Storage: PolkadotXcm VersionDiscoveryQueue (r:1 w:1)
	// Proof Skipped: PolkadotXcm VersionDiscoveryQueue (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: PolkadotXcm SafeXcmVersion (r:1 w:0)
	// Proof Skipped: PolkadotXcm SafeXcmVersion (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: ParachainSystem HostConfiguration (r:1 w:0)
	// Proof Skipped: ParachainSystem HostConfiguration (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: ParachainSystem PendingUpwardMessages (r:1 w:1)
	// Proof Skipped: ParachainSystem PendingUpwardMessages (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: PolkadotXcm Queries (r:0 w:1)
	// Proof Skipped: PolkadotXcm Queries (max_values: None, max_size: None, mode: Measured)
    fn force_unsubscribe_version_notify() -> Weight {
        // Minimum execution time: 27_669 nanoseconds.
        Weight::from_ref_time(28_290_000 as u64)            .saturating_add(T::DbWeight::get().reads(6 as u64))
            .saturating_add(T::DbWeight::get().writes(4 as u64))
    }
	// Storage: PolkadotXcm SupportedVersion (r:4 w:2)
	// Proof Skipped: PolkadotXcm SupportedVersion (max_values: None, max_size: None, mode: Measured)
    fn migrate_supported_version() -> Weight {
        // Minimum execution time: 16_265 nanoseconds.
        Weight::from_ref_time(17_001_000 as u64)            .saturating_add(T::DbWeight::get().reads(4 as u64))
            .saturating_add(T::DbWeight::get().writes(2 as u64))
    }
	// Storage: PolkadotXcm VersionNotifiers (r:4 w:2)
	// Proof Skipped: PolkadotXcm VersionNotifiers (max_values: None, max_size: None, mode: Measured)
    fn migrate_version_notifiers() -> Weight {
        // Minimum execution time: 16_608 nanoseconds.
        Weight::from_ref_time(17_024_000 as u64)            .saturating_add(T::DbWeight::get().reads(4 as u64))
            .saturating_add(T::DbWeight::get().writes(2 as u64))
    }
	// Storage: PolkadotXcm VersionNotifyTargets (r:5 w:0)
	// Proof Skipped: PolkadotXcm VersionNotifyTargets (max_values: None, max_size: None, mode: Measured)
    fn already_notified_target() -> Weight {
        // Minimum execution time: 19_984 nanoseconds.
        Weight::from_ref_time(20_480_000 as u64)            .saturating_add(T::DbWeight::get().reads(5 as u64))
    }
	// Storage: PolkadotXcm VersionNotifyTargets (r:2 w:1)
	// Proof Skipped: PolkadotXcm VersionNotifyTargets (max_values: None, max_size: None, mode: Measured)
	// Storage: PolkadotXcm SupportedVersion (r:1 w:0)
	// Proof Skipped: PolkadotXcm SupportedVersion (max_values: None, max_size: None, mode: Measured)
	// Storage: PolkadotXcm VersionDiscoveryQueue (r:1 w:1)
	// Proof Skipped: PolkadotXcm VersionDiscoveryQueue (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: PolkadotXcm SafeXcmVersion (r:1 w:0)
	// Proof Skipped: PolkadotXcm SafeXcmVersion (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: ParachainSystem HostConfiguration (r:1 w:0)
	// Proof Skipped: ParachainSystem HostConfiguration (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: ParachainSystem PendingUpwardMessages (r:1 w:1)
	// Proof Skipped: ParachainSystem PendingUpwardMessages (max_values: Some(1), max_size: None, mode: Measured)
    fn notify_current_targets() -> Weight {
        // Minimum execution time: 25_037 nanoseconds.
        Weight::from_ref_time(25_651_000 as u64)            .saturating_add(T::DbWeight::get().reads(7 as u64))
            .saturating_add(T::DbWeight::get().writes(3 as u64))
    }
	// Storage: PolkadotXcm VersionNotifyTargets (r:3 w:0)
	// Proof Skipped: PolkadotXcm VersionNotifyTargets (max_values: None, max_size: None, mode: Measured)
    fn notify_target_migration_fail() -> Weight {
        // Minimum execution time: 8_072 nanoseconds.
        Weight::from_ref_time(8_298_000 as u64)            .saturating_add(T::DbWeight::get().reads(3 as u64))
    }
	// Storage: PolkadotXcm VersionNotifyTargets (r:4 w:2)
	// Proof Skipped: PolkadotXcm VersionNotifyTargets (max_values: None, max_size: None, mode: Measured)
    fn migrate_version_notify_targets() -> Weight {
        // Minimum execution time: 17_316 nanoseconds.
        Weight::from_ref_time(17_739_000 as u64)            .saturating_add(T::DbWeight::get().reads(4 as u64))
            .saturating_add(T::DbWeight::get().writes(2 as u64))
    }
	// Storage: PolkadotXcm VersionNotifyTargets (r:4 w:2)
	// Proof Skipped: PolkadotXcm VersionNotifyTargets (max_values: None, max_size: None, mode: Measured)
	// Storage: PolkadotXcm SupportedVersion (r:1 w:0)
	// Proof Skipped: PolkadotXcm SupportedVersion (max_values: None, max_size: None, mode: Measured)
	// Storage: PolkadotXcm VersionDiscoveryQueue (r:1 w:1)
	// Proof Skipped: PolkadotXcm VersionDiscoveryQueue (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: PolkadotXcm SafeXcmVersion (r:1 w:0)
	// Proof Skipped: PolkadotXcm SafeXcmVersion (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: ParachainSystem HostConfiguration (r:1 w:0)
	// Proof Skipped: ParachainSystem HostConfiguration (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: ParachainSystem PendingUpwardMessages (r:1 w:1)
	// Proof Skipped: ParachainSystem PendingUpwardMessages (max_values: Some(1), max_size: None, mode: Measured)
    fn migrate_and_notify_old_targets() -> Weight {
        // Minimum execution time: 28_326 nanoseconds.
        Weight::from_ref_time(28_905_000 as u64)            .saturating_add(T::DbWeight::get().reads(9 as u64))
            .saturating_add(T::DbWeight::get().writes(4 as u64))
    }
}
