window.SIDEBAR_ITEMS = {"constant":[["MAX_PERIODS","The maximum number of periods that could have corresponding oracles."],["MAX_UNIQUE_ENTRIES","Maximum number of unique oracle entries expected in one block. Empirically determined by running `trades_estimation.py` and rounding up from 212 to 300. Not necessarily representative for all chains, configure `MaxUniqueEntries` according to your chain."]],"enum":[["OracleError","Possible errors when requesting an oracle value."],["OraclePeriod","Defines the different kinds of aggregation periods for oracles."]],"fn":[["determine_normalized_liquidity","Construct `Liquidity` based on unordered assets."],["determine_normalized_price","Calculate price from ordered assets"],["determine_normalized_volume","Construct `Volume` based on unordered assets."],["into_smoothing","Convert a given `period` into the smoothing factor used in the weighted average. See [`check_period_smoothing_factors`] for how the values are generated."],["ordered_pair","Return ordered asset tuple (A,B) where A < B Used in storage The implementation is the same as for AssetPair"]],"mod":[["pallet","The module that hosts all the FRAME types needed to add this pallet to a runtime."],["weights","Autogenerated weights for pallet_ema_oracle"]],"struct":[["OnActivityHandler","A callback handler for trading and liquidity activity that schedules oracle updates."],["OracleEntry","A type representing data produced by a trade or liquidity event. Timestamped to the block where it was created."]],"type":[["AssetId",""],["Balance",""],["Price","A price is a tuple of two `u128`s representing the numerator and denominator of a rational number."],["Source","Identifier for oracle data sources."]]};