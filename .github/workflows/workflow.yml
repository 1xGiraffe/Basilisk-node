name: build-and-deploy

on:
  push:
    branches:
      - master
      - testnet
  workflow_dispatch:
  pull_request:

env:
  RELAY_CHAIN_VERSION: v0.9.28

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.sha }}
      - run: git describe --tags --abbrev=0 --always
      - name: Setup cmake
        uses: jwlawson/actions-setup-cmake@v1.12
      - name: Install misc dependencies
        run: sudo apt-get install -y protobuf-compiler m4
      - name: Install Rust
        uses: codota/toolchain@00a8bf2bdcfe93aefd70422d3dec07337959d3a4
        with:
          profile: minimal
      - name: Install clippy
        run: rustup component add clippy
      - name: Run clippy
        run: make clippy
        continue-on-error: false
      - name: Install tarpaulin
        run: cargo install cargo-tarpaulin
      - name: Test && Generate code coverage
        run: make coverage
      - name: Upload to codecov.io
        uses: codecov/codecov-action@v1
        with:
          fail_ci_if_error: true
      - name: Build runtime
        run: cargo build --release --locked
        working-directory: runtime/basilisk
      - name: Build node
        run: cargo build --release --locked
      - name: Version info
        run: ./target/release/basilisk --version
      - name: Get basilisk-raw json
        run: |
          cp target/release/basilisk target/release/testing-basilisk
          chmod +x ./target/release/testing-basilisk
          ./target/release/testing-basilisk build-spec --chain testnet-k8s --raw > basilisk-testnet-chainspec.json
      - name: Generate wasm binary for testnet
        run: ./target/release/testing-basilisk export-genesis-wasm --chain basilisk-testnet-chainspec.json > para-2090-wasm

      - name: Generate genesis binary for testnet
        run: ./target/release/testing-basilisk export-genesis-state --chain basilisk-testnet-chainspec.json > para-2090-genesis

      - name: Upload wasm binary
        uses: actions/upload-artifact@v2
        with:
          name: devnet-para-2090-wasm
          path: ./para-2090-wasm

      - name: Upload genesis binary
        uses: actions/upload-artifact@v2
        with:
          name: devnet-para-2090-genesis
          path: ./para-2090-genesis

      - name: Upload config file
        uses: actions/upload-artifact@v2
        with:
          name: basilisk-testnet-chainspec.json
          path: ./basilisk-testnet-chainspec.json
      - name: Upload release binary
        uses: actions/upload-artifact@v2
        with:
          name: basilisk
          path: target/release/basilisk
      - name: Upload release wasm
        uses: actions/upload-artifact@v2
        with:
          name: basilisk_runtime.compact.compressed.wasm
          path: target/release/wbuild/basilisk-runtime/basilisk_runtime.compact.compressed.wasm
      - name: Upload testing-runtime wasm
        uses: actions/upload-artifact@v2
        with:
          name: testing_basilisk_runtime.compact.compressed.wasm
          path: target/release/wbuild/testing-basilisk-runtime/testing_basilisk_runtime.compact.compressed.wasm

  test-inclusion:
    needs: [build]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        chain: [ main, testing ]
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.sha }}
      - uses: actions/download-artifact@v2
        name: Download basilisk binary
        with:
          name: basilisk
          path: target/release
      - name: Prepare basilisk testing binary
        run: ln -f basilisk testing-basilisk
        working-directory: target/release
      - uses: robinraju/release-downloader@v1
        name: Download relay chain binary
        with:
          repository: paritytech/polkadot
          tag: ${{ env.RELAY_CHAIN_VERSION }}
          fileName: polkadot
          out-file-path: ../polkadot/target/release
      - run: chmod +x ./basilisk && ./basilisk --version
        name: Basilisk version
        working-directory: target/release
      - run: chmod +x ./polkadot && ./polkadot --version
        name: Polkadot version
        working-directory: ../polkadot/target/release
      - uses: actions/setup-node@v2
        name: Setup node.js
        with:
          node-version: '14'
          check-latest: true
      - run: npm install && npm run ${{ matrix.chain }}
        name: Launch rococo local & wait for inclusion
        working-directory: scripts/wait-for-inclusion

  version-check:
    runs-on: ubuntu-latest
    outputs:
      runtime-upgraded: ${{ steps.check-runtime.outputs.upgraded }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Install Rust
        uses: codota/toolchain@00a8bf2bdcfe93aefd70422d3dec07337959d3a4
        with:
          profile: minimal
      - name: Get crate versions
        run: |
          VERSION_UPDATE=$(./scripts/list_crate_updates.sh)
          VERSION_UPDATE=$(cat << EOF
          $VERSION_UPDATE
          EOF
          )
          echo "VERSION_UPDATE<<EOF" >> $GITHUB_ENV
          echo "$VERSION_UPDATE" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
      - name: Check runtime upgrade
        id: check-runtime
        if: contains(env.VERSION_UPDATE, 'Runtime version has been increased.')
        run: echo "::set-output name=upgraded::true"
      - name: Sticky Pull Request Comment
        uses: marocchino/sticky-pull-request-comment@v2.1.0
        with:
          message: |
            ${{ env.VERSION_UPDATE }}
      - name: Evaluate result
        if: contains(env.VERSION_UPDATE, 'have not been updated') || contains(env.VERSION_UPDATE, 'versions don''t match') || contains(env.VERSION_UPDATE, 'downgraded')
        run: exit 1

